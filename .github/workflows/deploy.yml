name: Node.js CI/CD to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # test:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: Use Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '18'
    
  #   - name: Install dependencies
  #     run: npm install
      
  #   - name: Run tests
  #     run: npm test

  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.AWS_EC2_SSH_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_EC2_IP }} "
          cd ~ &&
          rm -rf aws-s3-practice &&
          git clone https://github.com/jamshaid302/aws-s3-practice.git &&
          cd aws-s3-practice &&
          echo 'PORT=${{ secrets.PORT }}' >> .env &&
          echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' >> .env &&
          echo 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' >> .env &&
          echo 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' >> .env &&
          echo 'AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}' >> .env &&
          echo 'AWS_REGION=${{ secrets.AWS_REGION }}' >> .env &&
          echo 'CLOUD_FRONT_DISTRIBUTION_DOMIAN_NAME=${{ secrets.CLOUD_FRONT_DISTRIBUTION_DOMIAN_NAME }}' >> .env &&
          echo 'CLOUD_FRONT_KEY_ID=${{ secrets.CLOUD_FRONT_KEY_ID }}' >> .env &&
          # Install and start app
          npm install --omit=dev &&
          pm2 delete my-app || true &&
          pm2 start index.js --name 'my-app' &&
          pm2 save &&
          sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ${{ secrets.AWS_EC2_USERNAME }} --hp /home/${{ secrets.AWS_EC2_USERNAME }}"
